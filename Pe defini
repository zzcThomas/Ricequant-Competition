import pandas as pd
import numpy as np
import datetime

def init(context):
    scheduler.run_monthly(rebalance,8)
                  
def handle_bar(context, bar_dict):

    pass
    
def before_trading(context):
    num_stocks = 5

    fundamental_df = get_fundamentals(
        query(
            fundamentals.financial_indicator.inc_operating_revenue,fundamentals.eod_derivative_indicator.pe_ratio,fundamentals.financial_indicator.return_on_invested_capital
        ).
        filter(
            fundamentals.eod_derivative_indicator.pe_ratio < 8
        ).limit(
            num_stocks
        )
    )

    context.fundamental_df = fundamental_df
    context.stocks = context.fundamental_df.columns.values

  
    
def rebalance(context,bar_dict):
    
    for stock in context.portfolio.positions:
        if stock not in context.fundamental_df:
            order_target_percent(stock, 0)

    weight = update_weights(context, context.stocks)

    for stock in context.fundamental_df:
        if weight != 0 and stock in context.fundamental_df:
            order_target_percent(stock,weight)
            
    
def update_weights(context,stocks):
    if len(stocks) == 0:
        return 0 
    else:
        weight = 0.9/len(stocks)
        return weight
